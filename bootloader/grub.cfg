# Load video and graphics modules
insmod all_video
insmod gfxterm

set ORDER="a b"
set a_TRY=0
set a_OK=1
set b_TRY=0
set b_OK=1
load_env

# If machine-id is available, set it as kernel argument
if [ -n "$machine_id" ]; then
    set machine_id_arg="systemd.machine_id=$machine_id"
fi

# GRUB does not do arithmetic
function increment_a_TRY {
    if [ "$a_TRY" == "0" ]; then
        set a_TRY="1";
    elif [ "$a_TRY" == "1" ]; then
        set a_TRY="2";
    else
        set a_TRY="3";
    fi
}

function increment_b_TRY {
    if [ "$b_TRY" == "0" ]; then
        set b_TRY="1";
    elif [ "$b_TRY" == "1" ]; then
        set b_TRY="2";
    else
        set b_TRY="3";
    fi
}

# Default to showing the boot menu indefinetly
set timeout=-1
set timeout_style="menu"

# Select system to boot
for SLOT in $ORDER; do
    if [ "$SLOT" == "a" -a "$a_TRY" -lt 3 -a "$a_OK" -ne 0 ]; then
        set default="system.a"
        increment_a_TRY
        set timeout=3
        set timeout_style="hidden"
        break
    fi
    if [ "$SLOT" == "b" -a "$b_TRY" -lt 3 -a "$b_OK" -ne 0 ]; then
        set default="system.b"
        increment_b_TRY
        set timeout=3
        set timeout_style="hidden"
        break
    fi
done

# Save the number of tries
save_env a_TRY b_TRY

# Search for system partitions
search --label system.a --set a_DISK
search --label system.b --set b_DISK 

set common_kernel_args="$machine_id_arg panic=3 boot.panic_on_fail quiet loglevel=3"

menuentry "system.a (try=$a_TRY, ok=$a_OK)" --id system.a {
  set ORDER="a b"
  save_env ORDER
  linux ($a_DISK)/kernel root=/dev/disk/by-label/system.a rauc.slot=a $common_kernel_args
  initrd ($a_DISK)/initrd
}

menuentry "system.b (try=$b_TRY, ok=$b_OK)" --id system.b {
  set ORDER="b a"
  save_env ORDER
  linux ($b_DISK)/kernel root=/dev/disk/by-label/system.b rauc.slot=b $common_kernel_args
  initrd ($b_DISK)/initrd
}

menuentry "wipe user data / rescue system" --id rescue {
  search --label ESP --set ESP
  linux ($ESP)/rescue/kernel $machine_id_arg
  initrd ($ESP)/rescue/initrd
}
