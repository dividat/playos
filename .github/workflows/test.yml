name: "Test"
on:
  pull_request:
  push:
jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      integration_tests: ${{ steps.set-matrix.outputs.integration_tests }}
    steps:
    - uses: actions/checkout@v4
    - id: set-matrix
      run: |
        FILES=$(find testing/integration -name '*.nix' -printf '"%p",')
        FILES_JSON="[${FILES%,}]"
        echo "integration_tests=${FILES_JSON}" >> $GITHUB_OUTPUT

  integration-tests:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        file: ${{fromJson(needs.prepare-matrix.outputs.integration_tests)}}
    steps:
    - name: Ensure KVM is usable by nix-build
      run: sudo chmod a+rwx /dev/kvm
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v18
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          system-features = nixos-test benchmark big-parallel kvm
    - uses: DeterminateSystems/magic-nix-cache-action@v8
    - run: NIXPKGS_ALLOW_UNFREE=1 nix-build ${{ matrix.file }}

  kiosk-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v18
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          system-features = nixos-test benchmark big-parallel kvm
    - uses: DeterminateSystems/magic-nix-cache-action@v8
    - run: cd kiosk && nix-shell --run bin/test

  build-vm:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v18
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          system-features = nixos-test benchmark big-parallel kvm
    - uses: DeterminateSystems/magic-nix-cache-action@v8
    - run: NIXPKGS_ALLOW_UNFREE=1 ./build vm

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Make more space available on the runner
      run: |
        sudo rm -rf /usr/share/dotnet \
                    /usr/local/lib/android \
                    /opt/ghc \
                    /opt/hostedtoolcache/CodeQL

    - name: Ensure KVM is usable by nix-build
      run: sudo chmod a+rwx /dev/kvm

    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v18
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          system-features = nixos-test benchmark big-parallel kvm
    - uses: DeterminateSystems/magic-nix-cache-action@v8
    - name: Make magic-nix-cache read-only by removing post-build-hook
      run: sed -i '/post-build-hook = magic-nix-cache-build-hook/d' $HOME/.config/nix/nix.conf
    - run: ./build test-e2e
    - name: Add summary
      run: cat test-output/test-report.md >> "$GITHUB_STEP_SUMMARY"
      if: always()

  ocaml-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v18
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          system-features = nixos-test benchmark big-parallel kvm
    - uses: DeterminateSystems/magic-nix-cache-action@v8
    - run: cd controller && nix-shell --run 'bin/test --force --no-buffer'
